const marketSentiment={setMarketSentiment:(e,t)=>{const n=document.querySelector("#marketSentiment");n.classList.add(t),n.innerHTML=e},switchMarketSentiment:e=>{e<0&&marketSentiment.setMarketSentiment(`Timid && Negative: ${e}`,"redNumber"),e>0&&marketSentiment.setMarketSentiment(`Timid && Positive: ${e}`,"greenNumber"),e>10&&marketSentiment.setMarketSentiment(`Excessive & Positive: ${e}`,"greenNumber"),e<-10&&marketSentiment.setMarketSentiment(`Excessive & Negative: ${e}`,"redNumber")},setXValueAvarage:e=>{const t=document.querySelector("#headerX");let n=0;e.forEach(e=>{n+=e.shareOfTotal}),n/=e.length,t.innerHTML=n.toFixed(3).toString()},calculateSentimentsCorrelation:()=>{const e=document.querySelectorAll(".percentageDeltaPrice");let t=[],n=0,r=[];e.forEach(e=>{t.push({name:e.parentElement.parentElement.childNodes[5].innerText.trim(),percentage:parseFloat(e.childNodes[0].textContent),shareOfTotal:null})}),t.forEach(e=>{n+=e.percentage,r.push(e.percentage)}),marketSentiment.switchMarketSentiment(n.toFixed(0)),t.forEach(e=>{e.shareOfTotal=e.percentage/n*100}),marketSentiment.setXValueAvarage(t),t.forEach(e=>{const t=document.querySelector(`.coin${e.name}`);t.innerHTML=`<h3>${e.shareOfTotal.toFixed(2)}</h3>`,t.classList.add("percentageDeltaPrice")})}};export default marketSentiment;